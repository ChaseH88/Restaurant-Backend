type Query {
  allSchedules: [Schedule]
  findSchedule(id: ID): Schedule
}

type Mutation {
  updateSchedule(id: ID): String
  deleteSchedule(id: ID): String
}

scalar Date

type User {
  id: ID
  firstName: String
  lastName: String
  username: String
  password: String
  email: String
  title: String
  role: Role
  biography: String
  owner: User
  icon: Icon
  createdAt: Date
  updatedAt: Date
}

type Title {
  id: ID
  role: Role
  owner: User
  createdAt: Date
  updatedAt: Date
}

type Role {
  id: ID
  name: String
  description: String
  accessLevel: Int
  icon: Icon
  owner: User
  createdAt: Date
  updatedAt: Date
}

type Schedule {
  id: ID
  name: String
  description: String
  timeSlots: [TimeSlot]
  owner: User
  icon: Icon
  createdAt: Date
  updatedAt: Date
}

type TimeSlot {
  id: ID
  startTime: String
  endTime: String
  employees: [User]
  description: String
  createdAt: Date
  updatedAt: Date
}

type Icon {
  id: ID
  name: String
  description: String
  path: String
  createdAt: Date
  updatedAt: Date
}

type Image {
  id: ID
  name: String
  description: String
  path: String
  createdAt: Date
  updatedAt: Date
}
